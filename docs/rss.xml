<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://zhezhi198.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://zhezhi198.github.io</link></image><lastBuildDate>Sat, 25 Oct 2025 12:08:43 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>test</title><link>https://zhezhi198.github.io/post/test.html</link><description>```cpp
#include &lt;bits/stdc++.h&gt;
using namespace std;
// CJX__//
typedef long long ll; // 不开long long 见祖宗
typedef unsigned long long ull;
typedef __int128 i128;
typedef pair&lt;int, int&gt; PII;
typedef pair&lt;ll, ll&gt; PLL;
typedef vector&lt;int&gt; vi;
typedef vector&lt;ll&gt; vll;
typedef vector&lt;double&gt; vd;
typedef vector&lt;PII&gt; vPII;
#define IOS                  \
    ios::sync_with_stdio(0); \
    cin.tie(0);              \
    cout.tie(0);
#define out(x) cout &lt;&lt; ((x) ? 'YES' : 'NO') &lt;&lt; endl
#define mod(x, P) (((x) % (P) + (P)) % (P))
#define endl '\n'
#define gcd __gcd
#define lc p &lt;&lt; 1
#define rc p &lt;&lt; 1 | 1
#define INF 0x3f3f3f3f3f3f3f3f
#define inf 0x3f3f3f3f
#define fi first
#define se second
#define all(x) x.begin(), x.end()
#define lowbit(x) ((x) &amp; (-x))
#define rep(i, x, n) for (ll i = x; i &lt;= n; i++)
#define dep(i, x, n) for (ll i = x; i &gt;= n; i--)
#define mem(a, x) memset(a, x, sizeof a)
const double eps = 1e-5;
const int N = 1e6 + 10, M = 1e7 + 10, K = 26;
const ll MOD = 1e9 + 7, Md3 = 998244353, Md7 = 1e9 + 7, Md9 = 1e9 + 9;
const int dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1}, dy[8] = {0, 1, 0, -1, -1, 1, -1, 1};
const int ddx[8] = {1, 1, 2, 2, -1, -1, -2, -2}, ddy[8] = {2, -2, 1, -1, 2, -2, 1, -1};
template &lt;typename T&gt;
bool cmin(T &amp;a, const T &amp;b) { return b &lt; a ? a = b, 1 : 0; }
template &lt;typename T&gt;
bool cmax(T &amp;a, const T &amp;b) { return b &gt; a ? a = b, 1 : 0; }
template &lt;typename T&gt;
void sort_range(vector&lt;T&gt; &amp;v, int l, int r) { sort(v.begin() + l, v.begin() + r + 1); }
struct Random
{
    mt19937_64 rng;
    Random() : rng(chrono::steady_clock::now().time_since_epoch().count()) {}
    ull rand_ull(ull max_val = -1) { return rng() % (max_val + 1); }
    ll rand_ll(ll l, ll r) { return uniform_int_distribution&lt;ll&gt;(l, r)(rng); }
    int rand_int(int l, int r) { return uniform_int_distribution&lt;int&gt;(l, r)(rng); }
    double rand_db(double l, double r) { return uniform_real_distribution&lt;double&gt;(l, r)(rng); }
    bool rand_bool(double p = 0.5) { return bernoulli_distribution(p)(rng); }
    template &lt;typename T&gt;
    void shuffle(vector&lt;T&gt; &amp;v) { std::shuffle(v.begin(), v.end(), rng); }
};
ll qmi(ll a, ll b, ll p)
{
    ll res = 1 % p;
    a %= p;
    while (b)
    {
        if (b &amp; 1)
            res = res * a % p;
        a = a * a % p;
        b &gt;&gt;= 1;
    }
    return res;
}
/*      题目 要求 ai&gt;=2  然后问满足任意(i,j)使得数组中gcd(a[i],a[j])==1
    但是你可以删去 数组中的元素 问最少删除多长 使得满足上面条件
    获得硬币 ai-1  支付硬币 ai+1
    3
  5 5 5   -&gt; 4 5 5 -&gt; 3 5 5 -&gt; 3 4 5  out 0

  4
  2 3 2 4   -&gt; 凑不出 -&gt;  2 3  out 2

  3
  2 100 2 -&gt; 2 3 97  out 0

   5
2 4 2 11 2   -&gt;2 3 4 10 -&gt;2 3 5 7 out 1
*/

ll prime[N], cnt = 0;
bool st[M];
ll sum[N];
void init()
{
    for (ll i = 2; i &lt; M; i++)
    {
        if (!st[i])
            prime[cnt++] = i;
        for (ll j = 0; prime[j] * i &lt; M &amp;&amp; j &lt; cnt; j++)
        {
            st[prime[j] * i] = true;
            if (i % prime[j] == 0)
                break;
        }
    }
    rep(i, 0, cnt - 1)
    {
        sum[i + 1] = sum[i] + prime[i];
    }
}

void solve()
{
    ll n;
    cin &gt;&gt; n;
    vll a(n + 1, 0);
    ll summ = 0, num = 0;
    rep(i, 1, n) cin &gt;&gt; a[i], summ += a[i];
    sort_range(a, 1, n);
    rep(k, 0, n)
    {
        if (summ - num &gt;= sum[n - k])
        {
            cout &lt;&lt; k &lt;&lt; endl;
            return;
        }
        if (k &lt; n)
            num += a[k + 1];
    }
}

int main()
{
    IOS;
    int _ = 1;
    cin &gt;&gt; _; // 如果是多组数据
    init();
    while (_--)
    {
        solve();
    }
    return 0;
}
```。</description><guid isPermaLink="true">https://zhezhi198.github.io/post/test.html</guid><pubDate>Sat, 25 Oct 2025 12:05:16 +0000</pubDate></item></channel></rss>